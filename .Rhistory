knitr::opts_chunk$set(warning=FALSE, message=FALSE)
library(tidyverse)
library(dplyr)
library(zoo)
# svi.raw <- read_csv("./datasets/SVI2018_US_COUNTY.csv")
# svi.data <- svi.raw %>%
#   select(STATE,
#          COUNTY,
#          FIPS,
#          E_TOTPOP) %>%
#   mutate(FIPS = as.numeric(FIPS),
#          county = paste(COUNTY, "County"))
# covid.confirmed.raw <- data.table::fread("./datasets/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv")
# glimpse(covid.confirmed.raw)
# cumulative confirmed cases on county level
# covid.confirmed <- covid.confirmed.raw %>%
#   select(-c(UID, iso2, iso3, code3, FIPS, Country_Region, Lat, Long_, Combined_Key)) %>%
#   rename(state = Province_State,
#          county = Admin2) %>%
#   group_by(county) %>% # Specify group indicator
#   # summarise(across(everything(), sum)) %>% # Specify column
#   pivot_longer(-c(state, county),
#                names_to = "date",
#                values_to = "cumulative.confirmed.cases") %>%
#   filter(state %in% c(state.name, "District of Columbia")) %>%
#   group_by(county) %>%
#   mutate(confirmed.cases = cumulative.confirmed.cases - lag(cumulative.confirmed.cases),
#          date = as.Date(date, format = "%m/%d/%y"),
#          confirmed.cases = replace_na(confirmed.cases, 0),
#          county = paste(county, "County"))
#
# # fix negative cumulative cases
# while (any(covid.confirmed$confirmed.cases < 0)) {
#   covid.confirmed <- covid.confirmed %>%
#     mutate(cumulative.confirmed.cases = ifelse(cumulative.confirmed.cases < lag(cumulative.confirmed.cases),
#                                          lag(cumulative.confirmed.cases), # if smaller than previous
#                                          cumulative.confirmed.cases), # if not
#            cumulative.confirmed.cases = replace_na(cumulative.confirmed.cases, 0),
#            confirmed.cases = cumulative.confirmed.cases - lag(cumulative.confirmed.cases),
#            confirmed.cases = replace_na(confirmed.cases, 0))
# }
# covid.confirmed[1:5000,] %>%
#   ggplot(aes(x = date, y = cumulative.confirmed.cases, color = county)) +
#   geom_line() +
#   scale_color_hue(name='Midwest States')+
#   scale_x_date(date_breaks = "1 month", date_labels = "%b") +
#   # ylim(0, 1000000)+
#   ylab("Cumulative Confirmed Cases") +
#   xlab("Date") +
#   ggtitle("Cumulative Confirmed Cases in Midwest US") +
#   theme_minimal() +
#   theme(axis.title = element_text(size=12), # change axis style
#         legend.title = element_text(size=12), # change legend style
#         plot.title = element_text(size=14)) # change title style
# US_Region_2020_mobility <- read.csv( "./datasets/2020_US_Region_Mobility_Report.csv", header=T, na.strings=c("","NA"))
# US_State_2020_mobility <- US_Region_2020_mobility %>% filter(sub_region_2 != "Null") %>% rename(county = sub_region_2)
#
# # unique(US_State_2020_mobility_without_county$sub_region_1)
# StateMonthMobility <- US_State_2020_mobility %>%
#   mutate(date = as.Date(date, "%Y-%m-%d"))
# length(unique(covid.confirmed$county)) # 1901
# length(unique(StateMonthMobility$census_fips_code)) # 2837
# length(unique(StateMonthMobility$county)) # 1718
# covid.time.series <- covid.confirmed %>%
#   inner_join(StateMonthMobility, by = c("county","date")) %>%
#   select(county, state, date, cumulative.confirmed.cases, confirmed.cases,
#          retail_and_recreation_percent_change_from_baseline,
#          grocery_and_pharmacy_percent_change_from_baseline,
#          parks_percent_change_from_baseline,
#          transit_stations_percent_change_from_baseline,
#          workplaces_percent_change_from_baseline)
#
# covid.time.series <- covid.time.series %>%
#   inner_join(svi.data, by = "county") %>%
#   select(-c(STATE, COUNTY, FIPS)) %>%
#   rename(population = E_TOTPOP)
#
#
# dim(covid.time.series) # 58818935, 11
# length(unique(covid.time.series$county)) # 1600
# saveRDS(covid.time.series, file = "datasets/covid time series version 1.Rds")
covid.time.series <- readRDS("datasets/covid time series version 1.Rds")
mobility.active.rates
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
library(tidyverse)
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
library(tidyverse)
library(dplyr)
library(zoo)
# svi.raw <- read_csv("./datasets/SVI2018_US_COUNTY.csv")
# svi.data <- svi.raw %>%
#   select(STATE,
#          COUNTY,
#          FIPS,
#          E_TOTPOP) %>%
#   mutate(FIPS = as.numeric(FIPS),
#          county = paste(COUNTY, "County"))
# covid.confirmed.raw <- data.table::fread("./datasets/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv")
# glimpse(covid.confirmed.raw)
# cumulative confirmed cases on county level
# covid.confirmed <- covid.confirmed.raw %>%
#   select(-c(UID, iso2, iso3, code3, FIPS, Country_Region, Lat, Long_, Combined_Key)) %>%
#   rename(state = Province_State,
#          county = Admin2) %>%
#   group_by(county) %>% # Specify group indicator
#   # summarise(across(everything(), sum)) %>% # Specify column
#   pivot_longer(-c(state, county),
#                names_to = "date",
#                values_to = "cumulative.confirmed.cases") %>%
#   filter(state %in% c(state.name, "District of Columbia")) %>%
#   group_by(county) %>%
#   mutate(confirmed.cases = cumulative.confirmed.cases - lag(cumulative.confirmed.cases),
#          date = as.Date(date, format = "%m/%d/%y"),
#          confirmed.cases = replace_na(confirmed.cases, 0),
#          county = paste(county, "County"))
#
# # fix negative cumulative cases
# while (any(covid.confirmed$confirmed.cases < 0)) {
#   covid.confirmed <- covid.confirmed %>%
#     mutate(cumulative.confirmed.cases = ifelse(cumulative.confirmed.cases < lag(cumulative.confirmed.cases),
#                                          lag(cumulative.confirmed.cases), # if smaller than previous
#                                          cumulative.confirmed.cases), # if not
#            cumulative.confirmed.cases = replace_na(cumulative.confirmed.cases, 0),
#            confirmed.cases = cumulative.confirmed.cases - lag(cumulative.confirmed.cases),
#            confirmed.cases = replace_na(confirmed.cases, 0))
# }
# covid.confirmed[1:5000,] %>%
#   ggplot(aes(x = date, y = cumulative.confirmed.cases, color = county)) +
#   geom_line() +
#   scale_color_hue(name='Midwest States')+
#   scale_x_date(date_breaks = "1 month", date_labels = "%b") +
#   # ylim(0, 1000000)+
#   ylab("Cumulative Confirmed Cases") +
#   xlab("Date") +
#   ggtitle("Cumulative Confirmed Cases in Midwest US") +
#   theme_minimal() +
#   theme(axis.title = element_text(size=12), # change axis style
#         legend.title = element_text(size=12), # change legend style
#         plot.title = element_text(size=14)) # change title style
# US_Region_2020_mobility <- read.csv( "./datasets/2020_US_Region_Mobility_Report.csv", header=T, na.strings=c("","NA"))
# US_State_2020_mobility <- US_Region_2020_mobility %>% filter(sub_region_2 != "Null") %>% rename(county = sub_region_2)
#
# # unique(US_State_2020_mobility_without_county$sub_region_1)
# StateMonthMobility <- US_State_2020_mobility %>%
#   mutate(date = as.Date(date, "%Y-%m-%d"))
# length(unique(covid.confirmed$county)) # 1901
# length(unique(StateMonthMobility$census_fips_code)) # 2837
# length(unique(StateMonthMobility$county)) # 1718
# covid.time.series <- covid.confirmed %>%
#   inner_join(StateMonthMobility, by = c("county","date")) %>%
#   select(county, state, date, cumulative.confirmed.cases, confirmed.cases,
#          retail_and_recreation_percent_change_from_baseline,
#          grocery_and_pharmacy_percent_change_from_baseline,
#          parks_percent_change_from_baseline,
#          transit_stations_percent_change_from_baseline,
#          workplaces_percent_change_from_baseline)
#
# covid.time.series <- covid.time.series %>%
#   inner_join(svi.data, by = "county") %>%
#   select(-c(STATE, COUNTY, FIPS)) %>%
#   rename(population = E_TOTPOP)
#
#
# dim(covid.time.series) # 58818935, 11
# length(unique(covid.time.series$county)) # 1600
# saveRDS(covid.time.series, file = "datasets/covid time series version 1.Rds")
covid.time.series <- readRDS("datasets/covid time series version 1.Rds")
covid.time.series <- readRDS('datasets/covid time series version 1.Rds')
covid.time.series <- readRDS('datasets/covid time series version 3.Rds')
# dim(covid.time.series) # 58818935, 11
#
# # active rates df
# covid.time.series <- covid.time.series %>%
#   mutate(confirmed.rates = 100 * confirmed.cases / population) %>%
#   select(c(county, date, retail_and_recreation_percent_change_from_baseline, grocery_and_pharmacy_percent_change_from_baseline, parks_percent_change_from_baseline, transit_stations_percent_change_from_baseline, workplaces_percent_change_from_baseline, confirmed.rates)) %>%
#   filter(date >= as.Date("2020-04-13") & date <= as.Date("2021-01-31"))
#
# dim(covid.time.series) # 46234618, 8
#
# covid.time.series <- covid.time.series %>%
#   group_by(county) %>%
#   mutate(avg.3days = (rollsumr(confirmed.rates, k = 3, fill = NA))/3,
#          avg.7days = (rollsumr(confirmed.rates, k = 7, fill = NA))/7)
#
# dates.gr <- format(seq(from = as.Date("2020/04/20"), to = as.Date("2021/02/16"), by = "day"), "%Y-%m-%d")
#
# for (date in dates.gr){
#   covid.time.series <- covid.time.series %>%
#     group_by(county) %>%
#     mutate(growth.rate = log(avg.3days)/log(avg.7days))
# }
#
# saveRDS(covid.time.series, file = "datasets/covid time series version 2.Rds")
# glimpse(covid.time.series)
View(covid.time.series)
# start running here~~~~~!!!!
covid.time.series <- readRDS("datasets/covid time series version 3.Rds")
# dim(covid.time.series) # 32242, 8
View(covid.time.series)
typeof(covid.time.series)
covid.time.series = as.data.frame(covid.time.series)
View(covid.time.series)
View(covid.time.series)
covid.time.series.1 %>% filter(complete.cases(.))
covid.time.series.1 <- covid.time.series %>% filter(complete.cases(.))
covid.time.series.1
covid.time.series.1 <- covid.time.series %>% na.omit
covid.time.series.1
View(covid.time.series.1)
View(covid.time.series)
covid.time.series.2 <- covid.time.series[!rowSums(is.na(covid.time.series[-1])),]
covid.time.series.2
View(covid.time.series.2)
apply(covid.time.series, MARGIN = 1, function(x) sum(is.na(x)))
apply(covid.time.series, MARGIN = 1, function(x) sum(is.na(x)))
sapply(covid.time.series, function(x) sum(is.na(x)))
covid.time.series.2 <- covid.time.series %>%
select(-parks.avg)
sapply(covid.time.series.2, function(x) sum(is.na(x)))
covid.time.series.3 <- covid.time.series.2 %>% na.omit
View(covid.time.series.3)
sapply(covid.time.series.2, function(x) sum(is.na(x)))
sum(unique(covid.time.series.3$county))
unique(covid.time.series.3$county)
count(unique(covid.time.series.3$county))
l1 = unique(covid.time.series.3$county)
len(l1)
length(l1)
l1 = unique(covid.time.series$county)
l1 = unique(covid.time.series$county)
l3 = unique(covid.time.series.3$county)
hist(covid.time.series.3$retail.recreation.avg)
covid.time.series
ggplot(covid.time.series, aes(x = biweek, y = confirmed)) +
geom_line() +
facet_wrap(~county)
covid.time.series
ggplot(covid.time.series, aes(x = biweek, y = confirmed.avg)) +
geom_line() +
facet_wrap(~county)
ggplot(covid.time.series, aes(x = biweek, y = confirmed.avg)) +
geom_line()
covid.time.series.3
covid.time.series.2
sapply(covid.time.series.2, function(x) sum(is.na(x)))
covid.time.series.imputed <- covid.time.series.2 %>%
group_by(county) %>%
# a lot of fluctuations so simple avg
mutate(retail.recreation.avg = na_ma(retail.recreation.avg, weighting = "simple"),
grocery.pharmacy.avg = na_ma(grocery.pharmacy.avg, weighting = "simple"),
transit.avg = na_ma(transit.avg, weighting = "simple"),
workplace.avg = na_ma(workplace.avg, weighting = "simple"))
library(imputeTS)
covid.time.series.imputed <- covid.time.series.2 %>%
group_by(county) %>%
# a lot of fluctuations so simple avg
mutate(retail.recreation.avg = na_ma(retail.recreation.avg, weighting = "simple"),
grocery.pharmacy.avg = na_ma(grocery.pharmacy.avg, weighting = "simple"),
transit.avg = na_ma(transit.avg, weighting = "simple"),
workplace.avg = na_ma(workplace.avg, weighting = "simple"))
covid.time.series.nas <- covid.time.series.2[rowSums(is.na(covid.time.series.2)) == 0, ]
covid.time.series.nonnas <- covid.time.series.2[rowSums(is.na(covid.time.series.2)) <= 2, ]
View(covid.time.series.nonnas)
covid.time.series.nonnas <- covid.time.series.2 %>%
group_by(county) %>%
colSums(is.na(covid.time.series.2)) <= 2
covid.time.series.nonnas <- covid.time.series.2 %>%
group_by(county) %>%
colSums(is.na) <= 2
covid.time.series.nas <- covid.time.series.nonnas[, colSums(is.na(covid.time.series.nonnas)) <= 2]
View(covid.time.series.nas)
covid.time.series.imputed <- covid.time.series.2 %>%
group_by(county) %>%
# a lot of fluctuations so simple avg
mutate(retail.recreation.avg = na_ma(retail.recreation.avg, weighting = "simple"),
grocery.pharmacy.avg = na_ma(grocery.pharmacy.avg, weighting = "simple"),
transit.avg = na_ma(transit.avg, weighting = "simple"),
workplace.avg = na_ma(workplace.avg, weighting = "simple"))
View(covid.time.series.2)
covid.time.series.nonnas <- covid.time.series.2 %>%
group_by(county) %>%
summarise()
View(covid.time.series.nonnas)
covid.time.series.nonnas <- covid.time.series.2 %>%
group_by(county)
View(covid.time.series.nonnas)
View(covid.time.series.nas)
covid.time.series.nonnas <- covid.time.series.2 %>%
group_by(county) %>%
summarise_each(funs(sum(!is.na(.))))
View(covid.time.series.nonnas)
covid.time.series.nonnas <- covid.time.series.2 %>%
group_by(county) %>%
summarise_each(funs(sum(is.na(.))))
View(covid.time.series.nonnas)
covid.time.series.nonnas <- covid.time.series.2 %>%
group_by(county) %>%
summarise_each(funs(sum(is.na(.))))
View(covid.time.series.nonnas)
covid.time.series.nonnas <- covid.time.series.2 %>%
group_by(county) %>%
summarise_each(funs(sum(!is.na(.))))
View(covid.time.series.nonnas)
View(covid.time.series.nonnas)
covid.time.series.nas <- covid.time.series.2 %>%
group_by(county) %>%
summarise_each(funs(sum(is.na(.))))
View(covid.time.series.nas)
covid.time.series.nas <- covid.time.series.2 %>%
group_by(county) %>%
summarise_each(funs(sum(is.na(.))))
covid.time.series.nas <- covid.time.series.2 %>%
group_by(county) %>%
summarise_each(funs(sum(is.na(.)))) %>%
#  select(4:7) %>%
filter(retail.recreation.avg <= 2 | grocery.pharmacy.avg <= 2 | transit.avg <= 2 | workplace.avg <= 2)
View(covid.time.series.nas)
covid.time.series.nas <- covid.time.series.2 %>%
group_by(county) %>%
summarise_each(funs(sum(is.na(.))))
covid.time.series.nas <- covid.time.series.2 %>%
group_by(county) %>%
summarise_each(funs(sum(is.na(.)))) %>%
#  select(4:7) %>%
filter(retail.recreation.avg <= 2 | grocery.pharmacy.avg <= 2 | transit.avg <= 2 | workplace.avg <= 2)
covid.time.series.nas <- covid.time.series.2 %>%
group_by(county) %>%
summarise_each(funs(sum(is.na(.)))) %>%
#  select(4:7) %>%
filter(retail.recreation.avg <= 2 & grocery.pharmacy.avg <= 2 & transit.avg <= 2 & workplace.avg <= 2)
covid.time.series.nas <- covid.time.series.2 %>%
group_by(county) %>%
summarise_each(funs(sum(is.na(.))))
View(covid.time.series.nas)
covid.time.series.nas <- covid.time.series.2 %>%
group_by(county) %>%
summarise_each(funs(sum(is.na(.)))) %>%
filter(retail.recreation.avg <= 2 & grocery.pharmacy.avg <= 2 & transit.avg <= 2 & workplace.avg <= 2)
sapply(covid.time.series.nas, function(x) sum(is.na(x)))
covid.time.series.nas <- covid.time.series.2 %>%
group_by(county) %>%
summarise_each(funs(sum(is.na(.)))) %>%
filter(retail.recreation.avg <= 2 & grocery.pharmacy.avg <= 2 & transit.avg <= 2 & workplace.avg <= 2)
sapply(covid.time.series.nas, function(x) sum(is.na(x)))
county_nonnas = c(covid.time.series.nas$county)
View(covid.time.series.2)
covid.time.series.nonnas <- covid.time.series.2 %>%
filter(county !in county_nonnas)
county_nonnas = c(covid.time.series.nas$county)
covid.time.series.nonnas <- covid.time.series.2 %>%
filter(county !in county_nonnas)
covid.time.series.nonnas <- covid.time.series.2 %>%
filter(county %in% county_nonnas)
covid.time.series.nonnas <- covid.time.series.2 %>%
filter(county !%in% county_nonnas)
covid.time.series.nonnas <- covid.time.series.2 %>%
filter(county not %in% county_nonnas)
covid.time.series.nonnas <- covid.time.series.2 %>%
filter(!county %in% county_nonnas)
View(covid.time.series.nonnas)
covid.time.series.nonnas <- covid.time.series.2 %>%
filter(county %in% county_nonnas)
View(covid.time.series.nonnas)
View(covid.time.series.2)
View(covid.time.series.nonnas)
sapply(covid.time.series.nonnas, function(x) sum(is.na(x)))
covid.time.series.imputed <- covid.time.series.nonnas %>%
group_by(county) %>%
# a lot of fluctuations so simple avg
mutate(retail.recreation.avg = na_ma(retail.recreation.avg, weighting = "simple"),
grocery.pharmacy.avg = na_ma(grocery.pharmacy.avg, weighting = "simple"),
transit.avg = na_ma(transit.avg, weighting = "simple"),
workplace.avg = na_ma(workplace.avg, weighting = "simple"))
covid.time.series.nonnas
View(covid.time.series.nonnas)
View(covid.time.series.2)
covid.time.series.nonnas <- covid.time.series.nonnas %>%
filter(county != "Barber County")
View(covid.time.series.nonnas)
covid.time.series.imputed <- covid.time.series.nonnas %>%
group_by(county) %>%
# a lot of fluctuations so simple avg
mutate(retail.recreation.avg = na_ma(retail.recreation.avg, weighting = "simple"),
grocery.pharmacy.avg = na_ma(grocery.pharmacy.avg, weighting = "simple"),
transit.avg = na_ma(transit.avg, weighting = "simple"),
workplace.avg = na_ma(workplace.avg, weighting = "simple"))
View(covid.time.series.nonnas)
covid.time.series.nonnas <- covid.time.series.2 %>%
filter(county %in% county_nonnas)
# Barber County has only 2 data points
covid.time.series.nonnas <- covid.time.series.nonnas %>%
filter(county != c("Barber County","Furnas County"))
covid.time.series.imputed <- covid.time.series.nonnas %>%
group_by(county) %>%
# a lot of fluctuations so simple avg
mutate(retail.recreation.avg = na_ma(retail.recreation.avg, weighting = "simple"),
grocery.pharmacy.avg = na_ma(grocery.pharmacy.avg, weighting = "simple"),
transit.avg = na_ma(transit.avg, weighting = "simple"),
workplace.avg = na_ma(workplace.avg, weighting = "simple"))
covid.time.series.nonnas <- covid.time.series.2 %>%
filter(county %in% county_nonnas)
# Barber County has only 2 data points
covid.time.series.nonnas <- covid.time.series.nonnas %>%
filter(county != c("Barber County", "Furnas County"))
covid.time.series.imputed <- covid.time.series.nonnas %>%
group_by(county) %>%
# a lot of fluctuations so simple avg
mutate(retail.recreation.avg = na_ma(retail.recreation.avg, weighting = "simple"),
grocery.pharmacy.avg = na_ma(grocery.pharmacy.avg, weighting = "simple"),
transit.avg = na_ma(transit.avg, weighting = "simple"),
workplace.avg = na_ma(workplace.avg, weighting = "simple"))
covid.time.series.nonnas <- covid.time.series.2 %>%
filter(county %in% county_nonnas)
# Barber County has only 2 data points
covid.time.series.nonnas <- covid.time.series.nonnas %>%
filter(county != "Barber County") %>%
filter(county != "Furnas County")
covid.time.series.imputed <- covid.time.series.nonnas %>%
group_by(county) %>%
# a lot of fluctuations so simple avg
mutate(retail.recreation.avg = na_ma(retail.recreation.avg, weighting = "simple"),
grocery.pharmacy.avg = na_ma(grocery.pharmacy.avg, weighting = "simple"),
transit.avg = na_ma(transit.avg, weighting = "simple"),
workplace.avg = na_ma(workplace.avg, weighting = "simple"))
covid.time.series.nonnas <- covid.time.series.nonnas %>%
group_by(county) %>%
filter(rowSums() > 2)
covid.time.series.nonnas <- covid.time.series.2 %>%
filter(county %in% county_nonnas)
covid.time.series.nonnas <- covid.time.series.nonnas %>%
group_by(county) %>%
filter(rowSums() > 2)
covid.time.series.nonnas <- covid.time.series.2 %>%
filter(county %in% county_nonnas)
View(covid.time.series.2)
covid.time.series.nonnas <- covid.time.series.nonnas %>%
group_by(county) %>%
filter(rowSums() > 2)
rlang::last_error()
covid.time.series.nonnas <- covid.time.series.nonnas %>%
group_by(county) %>%
filter(rowSums(covid.time.series.nonnas, ) > 2)
covid.time.series.nonnas <- covid.time.series.2 %>%
filter(county %in% county_nonnas) %>%
group_by(county) %>%
#  filter(rowSums(covid.time.series.nonnas, ) > 2)
# Barber County has only 2 data points
filter(county != "Barber County") %>%
filter(county != "Furnas County") %>%
filter(county != "Hartley County")
covid.time.series.imputed <- covid.time.series.nonnas %>%
group_by(county) %>%
# a lot of fluctuations so simple avg
mutate(retail.recreation.avg = na_ma(retail.recreation.avg, weighting = "simple"),
grocery.pharmacy.avg = na_ma(grocery.pharmacy.avg, weighting = "simple"),
transit.avg = na_ma(transit.avg, weighting = "simple"),
workplace.avg = na_ma(workplace.avg, weighting = "simple"))
covid.time.series.nonnas <- covid.time.series.2 %>%
filter(county %in% county_nonnas) %>%
group_by(county) %>%
#  filter(rowSums(covid.time.series.nonnas, ) > 2)
# Barber County has only 2 data points
filter(county != "Barber County") %>%
filter(county != "Furnas County") %>%
filter(county != "Hartley County") %>%
filter(county != "Ouray County")
covid.time.series.imputed <- covid.time.series.nonnas %>%
group_by(county) %>%
# a lot of fluctuations so simple avg
mutate(retail.recreation.avg = na_ma(retail.recreation.avg, weighting = "simple"),
grocery.pharmacy.avg = na_ma(grocery.pharmacy.avg, weighting = "simple"),
transit.avg = na_ma(transit.avg, weighting = "simple"),
workplace.avg = na_ma(workplace.avg, weighting = "simple"))
covid.time.series.nonnas <- covid.time.series.2 %>%
filter(county %in% county_nonnas) %>%
group_by(county) %>%
#  filter(rowSums(covid.time.series.nonnas, ) > 2)
# Barber County has only 2 data points
filter(county != "Barber County") %>%
filter(county != "Furnas County") %>%
filter(county != "Hartley County") %>%
filter(county != "Ouray County") %>%
filter(county != "Wirt County")
covid.time.series.imputed <- covid.time.series.nonnas %>%
group_by(county) %>%
# a lot of fluctuations so simple avg
mutate(retail.recreation.avg = na_ma(retail.recreation.avg, weighting = "simple"),
grocery.pharmacy.avg = na_ma(grocery.pharmacy.avg, weighting = "simple"),
transit.avg = na_ma(transit.avg, weighting = "simple"),
workplace.avg = na_ma(workplace.avg, weighting = "simple"))
covid.time.series.imputed
library(robustHD)
covid.time.series.imputed[,3:7] = standardize(covid.time.series.imputed[,3:7])
covid.time.series.imputed
glimpse(covid.time.series.imputed)
library(missMDA)
# filling missing data using iterative imputation
#nb <- estim_ncpPCA(mobility.active.rates[,3:7], method.cv = "Kfold", verbose = FALSE) # estimate the number of components from incomplete data
#(available methods include GCV to approximate CV)
#nb$ncp #4
# mobility.active.comp <- imputePCA(mobility.active.rates[,3:7], ncp = nb$ncp) # iterativePCA algorithm
covid.mobility.pca <- prcomp(covid.time.series.imputed[,3:7], center = TRUE, scale = TRUE)
covid.mobility.pca$rotation <- covid.mobility.pca$rotation
covid.mobility.pca$x <- covid.mobility.pca$x # negation necessary?
#biplot(mobility.pca, scale = 0)
# combine imputed data with growth rate
#mobility.active.rates.imputed <- data.frame(mobility.active.comp$completeObs) %>%
#  cbind(mobility.active.rates[,c(1,2)], ., mobility.active.rates[,c(9,10,11,12)])
# add PC1 as pca
covid.time.series.imputed$covid.mobility.pca = covid.mobility.pca$x[,"PC1"]
glimpse(covid.time.series.imputed)
mobility.active.country.lm <- lm(growth.rate.avg ~ mobility.pca.avg, data = covid.time.series.imputed)
